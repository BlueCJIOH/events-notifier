services:
  web:
    build: .
    env_file: .env
    depends_on:
      db:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started
      clickhouse:
        condition: service_started
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    restart: always
    networks:
      - notifier-network
    command: uvicorn notifier.asgi:application --host 0.0.0.0 --port 8000

  rabbitmq-consumer:
    build: .
    command: python manage.py rabbitmq_consumer
    env_file: .env
    depends_on:
      web:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
      clickhouse:
        condition: service_started
    volumes:
      - .:/app
    networks:
      - notifier-network
    restart: always

  db:
    image: postgres:16.4
    env_file: .env
    ports:
        - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    networks:
      - notifier-network

  rabbitmq:
      image: rabbitmq:3.11-management
      container_name: rabbitmq
      ports:
        - "5672:5672"
        - "15672:15672"
      env_file: .env
      networks:
        - notifier-network
      restart: always
      healthcheck:
        test: ["CMD", "rabbitmq-diagnostics", "ping"]
        interval: 10s
        timeout: 5s
        retries: 5

  redis:
    image: redis:7.0.9
    ports:
      - "6379:6379"
    networks:
      - notifier-network
    restart: always

  worker:
    build: .
    command: celery -A notifier worker -l info
    env_file: .env
    depends_on:
      - db
      - rabbitmq
    volumes:
      - .:/app
    networks:
      - notifier-network
    restart: always

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    env_file: .env
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    networks:
      - notifier-network
    restart: always

volumes:
  postgres_data:
    name: postgres_data
  clickhouse_data:
    name: clickhouse_data

networks:
  notifier-network:
    driver: bridge
    name: notifier-network
